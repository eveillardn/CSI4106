	private int getHeuristic(Cell c, Board b){
		if (c.toString() =="O"){
			return 999;
		}
		
		Cell h = b.getHome();
		int hx= h.getX();
		int hy = h.getY();
		
		
		
		int cx = c.getX();
		int cy = c.getY();
		
		
		int width = hx-cx;
		int height = hy - cy;
		int obstacles = 0;
		//check for negative
		if (height==0){
			for(int i = 0; i< Math.abs(width); i++){
				if (b.getCell(cx+i, cy).toString() =="0"){
					obstacles++;
				}
			}return obstacles;
		}
		if (width==0){
			for(int i = 0; i< Math.abs(height); i++){
				if (b.getCell(cx, cy+1).toString() =="0"){
					obstacles++;
				}
			}return obstacles;
		}	
		boolean positivex;
		boolean positivey;
		if (height >0){
			positivey = true;
		}
		else{
			positivey = false;
		}
		
		if (width >0){
			positivex = true;
		}
		else{
			positivex = false;
		}
		
		if (Math.abs(height) >0 && Math.abs(width) >0){
			for (int i = 0; i<Math.abs(height); i++){
			
				if(positivey){
					if (b.getCell(cx, cy+i).toString() =="0"){
					obstacles++;
					}
				}
				else{
					if (b.getCell(cx, cy-i).toString() =="0"){
						obstacles++;
						}
					}
				}
			for (int i = 1; i<Math.abs(height); i++){
					if(positivex){
						
							if (b.getCell(cx+1, cy+height).toString() =="0"){
								obstacles++;
							}
					}
					else{
						if (b.getCell(cx-i,cy+height).toString() =="0"){
							obstacles++;
						}

					}
			}
		
		
		
		return obstacles;
		
		
	}
}