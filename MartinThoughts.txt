Martin`s thoughts on what to collect and how this would all work.

Texas Hold 'Em has different "phases":

Phase 1: you get your 2 own cards, no card is known on the table;
Phase 2, Flop: reveal 3 cards on the table;
Phase 3, Turn: reveal the 4th card on the table;
Phase 4, River: reveal the the last card on the table.

After each of these phases, everybody gets a chance to bet / call / check / fold.
Which means we basically have at least 4 interactions per game
(more if someone bets after you already called / checked, in which case you have to decide if you call or fold).

I'd say we determine which action the bot should do by gathering separate data for each of these stages.
Here's what information I think we'd need to collect:
- the bot's cards (suit + number)
- the known cards on the table (suit + number, if any)
- the probability to win according to our poker game (this could influence the amount to bet)
- if the bot actually would've ended up winning the game or not.

Thoughts?

***
Nic:
Yeah I think this makes more sense. The algorithm should be able to change it's betting pattern in the middle of a hand as you say. Now I'm just wondering if this would mean 4 different arff files (so one for every phase). Again, I need to check out how weka actually does things so I'll be trying to look at the tutorial video Scott sent later tonight. I'm only getting home at 8:30-9pm and have an early lab tomorrow so I'm not sure I'll be able to get much started before 11:30am tomorrow.

Thoughts on the seperate arff files?

***
Martin: I completely agree with the separate arff files per phase, but I also need to play with Weka some more. The video tutorials do sound like a good start.
